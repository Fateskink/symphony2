{"ast":null,"code":"import Chart from \"chart.js\";\nimport * as i0 from \"@angular/core\";\nexport class CardLineChartComponent {\n  constructor() {}\n  ngOnInit() {}\n  ngAfterViewInit() {\n    var config = {\n      type: \"line\",\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n        datasets: [{\n          label: new Date().getFullYear(),\n          backgroundColor: \"#4c51bf\",\n          borderColor: \"#4c51bf\",\n          data: [65, 78, 66, 44, 56, 67, 75],\n          fill: false\n        }, {\n          label: new Date().getFullYear() - 1,\n          fill: false,\n          backgroundColor: \"#fff\",\n          borderColor: \"#fff\",\n          data: [40, 68, 86, 74, 56, 60, 87]\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Sales Charts\",\n          fontColor: \"white\"\n        },\n        legend: {\n          labels: {\n            fontColor: \"white\"\n          },\n          align: \"end\",\n          position: \"bottom\"\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: \"rgba(255,255,255,.7)\"\n            },\n            display: true,\n            scaleLabel: {\n              display: false,\n              labelString: \"Month\",\n              fontColor: \"white\"\n            },\n            gridLines: {\n              display: false,\n              borderDash: [2],\n              borderDashOffset: [2],\n              color: \"rgba(33, 37, 41, 0.3)\",\n              zeroLineColor: \"rgba(0, 0, 0, 0)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: \"rgba(255,255,255,.7)\"\n            },\n            display: true,\n            scaleLabel: {\n              display: false,\n              labelString: \"Value\",\n              fontColor: \"white\"\n            },\n            gridLines: {\n              borderDash: [3],\n              borderDashOffset: [3],\n              drawBorder: false,\n              color: \"rgba(255, 255, 255, 0.15)\",\n              zeroLineColor: \"rgba(33, 37, 41, 0)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }]\n        }\n      }\n    };\n    let ctx = document.getElementById(\"line-chart\");\n    ctx = ctx.getContext(\"2d\");\n    new Chart(ctx, config);\n  }\n}\nCardLineChartComponent.ɵfac = function CardLineChartComponent_Factory(t) {\n  return new (t || CardLineChartComponent)();\n};\nCardLineChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CardLineChartComponent,\n  selectors: [[\"app-card-line-chart\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"relative\", \"flex\", \"flex-col\", \"min-w-0\", \"break-words\", \"w-full\", \"mb-6\", \"shadow-lg\", \"rounded\", \"bg-blueGray-700\"], [1, \"rounded-t\", \"mb-0\", \"px-4\", \"py-3\", \"bg-transparent\"], [1, \"flex\", \"flex-wrap\", \"items-center\"], [1, \"relative\", \"w-full\", \"max-w-full\", \"flex-grow\", \"flex-1\"], [1, \"uppercase\", \"text-blueGray-100\", \"mb-1\", \"text-xs\", \"font-semibold\"], [1, \"text-white\", \"text-xl\", \"font-semibold\"], [1, \"p-4\", \"flex-auto\"], [1, \"relative\", 2, \"height\", \"350px\"], [\"id\", \"line-chart\"]],\n  template: function CardLineChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h6\", 4);\n      i0.ɵɵtext(5, \" Overview \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"h2\", 5);\n      i0.ɵɵtext(7, \"Sales value\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n      i0.ɵɵelement(10, \"canvas\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Chart","CardLineChartComponent","constructor","ngOnInit","ngAfterViewInit","config","type","data","labels","datasets","label","Date","getFullYear","backgroundColor","borderColor","fill","options","maintainAspectRatio","responsive","title","display","text","fontColor","legend","align","position","tooltips","mode","intersect","hover","scales","xAxes","ticks","scaleLabel","labelString","gridLines","borderDash","borderDashOffset","color","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","yAxes","drawBorder","ctx","document","getElementById","getContext","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/admin/code/class/term-3-prj/symphony8/symphony2/ClientApp/src/app/components/cards/card-line-chart/card-line-chart.component.ts","/Users/admin/code/class/term-3-prj/symphony8/symphony2/ClientApp/src/app/components/cards/card-line-chart/card-line-chart.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from \"@angular/core\";\nimport Chart from \"chart.js\";\n\n@Component({\n  selector: \"app-card-line-chart\",\n  templateUrl: \"./card-line-chart.component.html\",\n})\nexport class CardLineChartComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n  ngAfterViewInit() {\n    var config = {\n      type: \"line\",\n      data: {\n        labels: [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n        ],\n        datasets: [\n          {\n            label: new Date().getFullYear(),\n            backgroundColor: \"#4c51bf\",\n            borderColor: \"#4c51bf\",\n            data: [65, 78, 66, 44, 56, 67, 75],\n            fill: false,\n          },\n          {\n            label: new Date().getFullYear() - 1,\n            fill: false,\n            backgroundColor: \"#fff\",\n            borderColor: \"#fff\",\n            data: [40, 68, 86, 74, 56, 60, 87],\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Sales Charts\",\n          fontColor: \"white\",\n        },\n        legend: {\n          labels: {\n            fontColor: \"white\",\n          },\n          align: \"end\",\n          position: \"bottom\",\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true,\n        },\n        scales: {\n          xAxes: [\n            {\n              ticks: {\n                fontColor: \"rgba(255,255,255,.7)\",\n              },\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Month\",\n                fontColor: \"white\",\n              },\n              gridLines: {\n                display: false,\n                borderDash: [2],\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineColor: \"rgba(0, 0, 0, 0)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n          yAxes: [\n            {\n              ticks: {\n                fontColor: \"rgba(255,255,255,.7)\",\n              },\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Value\",\n                fontColor: \"white\",\n              },\n              gridLines: {\n                borderDash: [3],\n                borderDashOffset: [3],\n                drawBorder: false,\n                color: \"rgba(255, 255, 255, 0.15)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n        },\n      },\n    };\n    let ctx: any = document.getElementById(\"line-chart\") as HTMLCanvasElement;\n    ctx = ctx.getContext(\"2d\");\n    new Chart(ctx, config);\n  }\n}\n","<div\n  class=\"relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded bg-blueGray-700\"\n>\n  <div class=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n    <div class=\"flex flex-wrap items-center\">\n      <div class=\"relative w-full max-w-full flex-grow flex-1\">\n        <h6 class=\"uppercase text-blueGray-100 mb-1 text-xs font-semibold\">\n          Overview\n        </h6>\n        <h2 class=\"text-white text-xl font-semibold\">Sales value</h2>\n      </div>\n    </div>\n  </div>\n  <div class=\"p-4 flex-auto\">\n    <!-- Chart -->\n    <div class=\"relative\" style=\"height: 350px\">\n      <canvas id=\"line-chart\"></canvas>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}